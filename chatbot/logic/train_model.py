import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import MultiLabelBinarizer
import joblib
import os

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
csv_path = os.path.join(BASE_DIR, "Disease and symptoms dataset.csv")

df = pd.read_csv(csv_path)
df.columns = df.columns.str.strip()
df.columns.values[0] = "Disease"  # üëà G√°n l·∫°i t√™n c·ªôt ƒë·∫ßu ti√™n

# Lo·∫°i b·ªè b·ªánh n√†o kh√¥ng c√≥ tri·ªáu ch·ª©ng
df = df.dropna()

# L·∫•y c√°c c·ªôt tri·ªáu ch·ª©ng
symptom_cols = df.columns[1:]
df["symptoms"] = df[symptom_cols].apply(lambda x: [col.strip().lower() for col, val in zip(symptom_cols, x) if val == 1], axis=1)

# M√£ ho√°
mlb = MultiLabelBinarizer()
X = mlb.fit_transform(df["symptoms"])
y = df["Disease"]

# Hu·∫•n luy·ªán
clf = DecisionTreeClassifier()
clf.fit(X, y)

# L∆∞u m√¥ h√¨nh
joblib.dump(clf, os.path.join(BASE_DIR, "chatbot_model.pkl"))
joblib.dump(mlb, os.path.join(BASE_DIR, "symptom_encoder.pkl"))

print("‚úÖ ƒê√£ train xong v√† l∆∞u m√¥ h√¨nh.")
